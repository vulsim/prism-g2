
var sleep = require('./deps/sleep').sleep;
var BioDaq = require('./biodaq').BioDaq;
var net = require('net');
var instantDiCtrl = BioDaq.InstantDiCtrl.createInstantDiCtrl("PCI-1753,BID#0");

instantDiCtrl.event.diPortChangeStateEvent = function (srcNum, length, portData) {
	console.log(portData);
};

instantDiCtrl.Subscribe([]);



/*
var i = 0;
while (i < 10) {
	console.log(instantDiCtrl.ReadPortRange(0, 12));
	sleep(1);
}
console.log("End.");
*/

var clients = [];
 
net.createServer(function (socket) {
	socket.name = socket.remoteAddress + ":" + socket.remotePort
	clients.push(socket);

	socket.write("Welcome " + socket.name + "\n");
	broadcast(socket.name + " joined the chat\n", socket);
	socket.on('data', function (data) {
		broadcast(socket.name + "> " + data, socket);
	});

	socket.on('end', function () {
		clients.splice(clients.indexOf(socket), 1);
		broadcast(socket.name + " left the chat.\n");
	});

	function broadcast(message, sender) {
		clients.forEach(function (client) {
			if (client === sender) return;
			client.write(message);
		});

		process.stdout.write(message)
	}
 
}).listen(5000);


console.log("Chat server running at port 5000\n");

